import { AuthorizeDirectChargeOptions, AuthorizeDirectChargeResponse, BulkTransferOptions, BulkTransferResponse, ChapaOptions, CreateSubaccountOptions, CreateSubaccountResponse, DirectChargeOptions, DirectChargeResponse, GenTxRefOptions, GetBanksResponse, GetTransactionLogsOptions, GetTransactionLogsResponse, GetTransactionsResponse, GetTransfersResponse, InitializeOptions, InitializeResponse, TransferOptions, TransferResponse, VerifyOptions, VerifyResponse, VerifyTransferOptions, VerifyTransferResponse } from './interfaces';
interface IChapa {
    initialize(options: InitializeOptions): Promise<InitializeResponse>;
    mobileInitialize(options: InitializeOptions): Promise<InitializeResponse>;
    verify(options: VerifyOptions): Promise<VerifyResponse>;
    genTxRef(genTxRefOptions?: GenTxRefOptions): Promise<string>;
    getBanks(): Promise<GetBanksResponse>;
    createSubaccount(options: CreateSubaccountOptions): Promise<CreateSubaccountResponse>;
    getTransactions(): Promise<GetTransactionsResponse>;
    getTransactionLogs(options: GetTransactionLogsOptions): Promise<GetTransactionLogsResponse>;
    transfer(options: TransferOptions): Promise<TransferResponse>;
    bulkTransfer(options: BulkTransferOptions): Promise<BulkTransferResponse>;
    verifyTransfer(options: VerifyTransferOptions): Promise<VerifyTransferResponse>;
    getTransfers(): Promise<GetTransfersResponse>;
    directCharge(options: DirectChargeOptions): Promise<DirectChargeResponse>;
    authorizeDirectCharge(options: AuthorizeDirectChargeOptions): Promise<AuthorizeDirectChargeResponse>;
}
export declare class Chapa implements IChapa {
    private chapaOptions;
    constructor(chapaOptions: ChapaOptions);
    initialize(options: InitializeOptions): Promise<InitializeResponse>;
    mobileInitialize(options: InitializeOptions): Promise<InitializeResponse>;
    verify(options: VerifyOptions): Promise<VerifyResponse>;
    genTxRef(options?: GenTxRefOptions): Promise<string>;
    getBanks(): Promise<GetBanksResponse>;
    createSubaccount(options: CreateSubaccountOptions): Promise<CreateSubaccountResponse>;
    getTransactions(): Promise<GetTransactionsResponse>;
    getTransactionLogs(options: GetTransactionLogsOptions): Promise<GetTransactionLogsResponse>;
    transfer(options: TransferOptions): Promise<TransferResponse>;
    bulkTransfer(options: BulkTransferOptions): Promise<BulkTransferResponse>;
    verifyTransfer(options: VerifyTransferOptions): Promise<VerifyTransferResponse>;
    getTransfers(): Promise<GetTransfersResponse>;
    directCharge(options: DirectChargeOptions): Promise<DirectChargeResponse>;
    authorizeDirectCharge(options: AuthorizeDirectChargeOptions): Promise<AuthorizeDirectChargeResponse>;
}
export {};
